{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"C:/tokpedproject1/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\tokpedproject1\\\\next\\\\pages\\\\pokemonlist.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\t\\tmargin: 3px 6px 6px 6px;\\n        font-size: 14px;\\n\\t\\tcolor: black;\\n\\t\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  \\t\\tpadding: 16px 25px;\\n\\t\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Link from 'next/link';\nimport { css } from '@emotion/css';\nimport Head from '../components/head';\nimport Header from '../components/header';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nvar pokemonConfig = require('../config');\n\nvar PokemonListPage = function PokemonListPage(props) {\n  _s();\n\n  var _useState = useState([]),\n      pokemonlist = _useState[0],\n      setPokemonList = _useState[1];\n\n  var _useState2 = useState(false),\n      emptypokemon = _useState2[0],\n      setIsEmptyPokemon = _useState2[1];\n\n  var _useState3 = useState(20),\n      limit = _useState3[0],\n      setLimit = _useState3[1];\n\n  var _useState4 = useState(0),\n      offset = _useState4[0],\n      setOffset = _useState4[1];\n\n  var _useState5 = useState(true),\n      hasMoreItems = _useState5[0],\n      setHasMoreItems = _useState5[1]; //Styles\n\n\n  var listpokemon = css(_templateObject());\n  var textcard = css(_templateObject2());\n  useEffect(function () {\n    var mypokemon = localStorage.getItem('savepokemon');\n    var parsemypokemon = JSON.parse(mypokemon);\n    console.log(parsemypokemon);\n    getRefresh();\n  }, []);\n\n  function getRefresh() {\n    axios({\n      url: pokemonConfig.BASE_URL + '/api/getlistpokemon',\n      method: 'POST',\n      data: {\n        limit: limit,\n        offset: offset\n      },\n      timeout: pokemonConfig.TIMEOUT\n    }).then(function (response) {\n      if (response.data.code == '200') {\n        setPokemonList(response.data.data.results);\n\n        if (response.data.data.next != null) {\n          setOffset(1);\n          setHasMoreItems(response.data.data.results.length > 4 ? true : false);\n        }\n      } else {\n        setIsEmptyPokemon(true);\n      }\n    });\n  }\n\n  function getHandleLoadMore() {\n    axios({\n      url: pokemonConfig.BASE_URL + '/api/getlistpokemon',\n      method: 'POST',\n      data: {\n        limit: limit,\n        offset: offset\n      },\n      timeout: pokemonConfig.TIMEOUT\n    }).then(function (response) {\n      if (response.data.code == '200') {\n        var lists = pokemonlist.concat(response.data.data.results);\n        setPokemonList(lists);\n        setOffset(offset + 20);\n      } else {\n        setIsEmptyPokemon(true);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: listpokemon,\n      children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: pokemonlist,\n        next: getHandleLoadMore,\n        hasMore: hasMoreItems,\n        loader: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 14\n        }, _this),\n        endMessage: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-light text-center small\",\n          children: \"Semua data telah ditampilkan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 18\n        }, _this),\n        refreshFunction: getRefresh,\n        pullDownToRefresh: true,\n        pullDownToRefreshContent: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-light text-center small\",\n          children: \"\\u2193 Pull down to refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 32\n        }, _this),\n        releaseToRefreshContent: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-light text-center small\",\n          children: \"\\u2191 Release to refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 31\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: pokemonlist.map(function (data, i) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6 mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/pokemondetail?name=\" + data.name,\n                as: \"/pokemondetail?name=\" + data.name,\n                passHref: true,\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"border-bottom p-2\",\n                    src: data.image\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 45\n                  }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: textcard,\n                    children: data.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 45\n                  }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: textcard,\n                    children: data.type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 45\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 41\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, _this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 9\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(PokemonListPage, \"h8JuKu/8Ie68DIWpoOcvCl0Xr3I=\");\n\n_c = PokemonListPage;\nexport default PokemonListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonListPage\");","map":{"version":3,"sources":["C:/tokpedproject1/next/pages/pokemonlist.js"],"names":["React","useState","useEffect","axios","Link","css","Head","Header","InfiniteScroll","pokemonConfig","require","PokemonListPage","props","pokemonlist","setPokemonList","emptypokemon","setIsEmptyPokemon","limit","setLimit","offset","setOffset","hasMoreItems","setHasMoreItems","listpokemon","textcard","mypokemon","localStorage","getItem","parsemypokemon","JSON","parse","console","log","getRefresh","url","BASE_URL","method","data","timeout","TIMEOUT","then","response","code","results","next","length","getHandleLoadMore","lists","concat","map","i","name","image","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Link from 'next/link'\r\nimport { css } from '@emotion/css'\r\nimport Head from '../components/head'\r\nimport Header from '../components/header'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\n\r\nconst pokemonConfig = require('../config')\r\n\r\nconst PokemonListPage = props => {\r\n    const [pokemonlist, setPokemonList]= useState([])\r\n\tconst [emptypokemon, setIsEmptyPokemon]= useState(false)\r\n\tconst [limit, setLimit]= useState(20)\r\n\tconst [offset, setOffset]= useState(0)\r\n\tconst [hasMoreItems, setHasMoreItems] = useState(true);\r\n\r\n\t//Styles\r\n    const listpokemon = css`\r\n  \t\tpadding: 16px 25px;\r\n\t`\r\n\tconst textcard = css`\r\n\t\tmargin: 3px 6px 6px 6px;\r\n        font-size: 14px;\r\n\t\tcolor: black;\r\n\t`\r\n\r\n    useEffect(() => {\r\n\t\tlet mypokemon = localStorage.getItem('savepokemon')\r\n\t\tlet parsemypokemon = JSON.parse(mypokemon)\r\n\t\tconsole.log(parsemypokemon)\r\n\t\tgetRefresh()\r\n    }, []);\r\n\r\n\tfunction getRefresh(){\r\n\t\taxios({\r\n\t\t\turl: pokemonConfig.BASE_URL + '/api/getlistpokemon',\r\n\t\t\tmethod: 'POST',\r\n\t\t\tdata: {\r\n\t\t\t\tlimit: limit,\r\n\t\t\t\toffset: offset\r\n\t\t\t},\r\n\t\t\ttimeout: pokemonConfig.TIMEOUT\r\n\t\t}).then(function (response) {\r\n\t\t\tif(response.data.code == '200') {\r\n\t\t\t\tsetPokemonList(response.data.data.results)\r\n\t\t\t\tif(response.data.data.next != null){\r\n\t\t\t\t\tsetOffset(1)\r\n\t\t\t\t\tsetHasMoreItems(response.data.data.results.length > 4 ? true : false)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsetIsEmptyPokemon(true)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tfunction getHandleLoadMore(){\r\n\t\taxios({\r\n\t\t\turl: pokemonConfig.BASE_URL + '/api/getlistpokemon',\r\n\t\t\tmethod: 'POST',\r\n\t\t\tdata: {\r\n\t\t\t\tlimit: limit,\r\n\t\t\t\toffset: offset\r\n\t\t\t},\r\n\t\t\ttimeout: pokemonConfig.TIMEOUT\r\n\t\t}).then(function (response) {\r\n\t\t\tif(response.data.code == '200') {\r\n\t\t\t\tlet lists = pokemonlist.concat(response.data.data.results)\r\n\t\t\t\tsetPokemonList(lists)\r\n\t\t\t\tsetOffset(offset + 20)\r\n\t\t\t} else {\r\n\t\t\t\tsetIsEmptyPokemon(true)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Head />\r\n\t\t\t<Header />\r\n\t\t\t<div className={listpokemon}>\r\n\t\t\t\t<InfiniteScroll\r\n\t\t\t\t\tdataLength={pokemonlist}\r\n\t\t\t\t\tnext={getHandleLoadMore}\r\n\t\t\t\t\thasMore={hasMoreItems}\r\n\t\t\t\t\tloader={<h6>Loading...</h6>}\r\n\t\t\t\t\tendMessage={<div className=\"alert alert-light text-center small\">Semua data telah ditampilkan</div>}\r\n\t\t\t\t\trefreshFunction={getRefresh}\r\n\t\t\t\t\tpullDownToRefresh\r\n\t\t\t\t\tpullDownToRefreshContent={<div className=\"alert alert-light text-center small\">&#8595; Pull down to refresh</div>}\r\n\t\t\t\t\treleaseToRefreshContent={<div className=\"alert alert-light text-center small\">&#8593; Release to refresh</div>}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t{pokemonlist.map((data, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className=\"col-6 mb-3\" key={i}>\r\n                                    <Link href={\"/pokemondetail?name=\"+ data.name} as={\"/pokemondetail?name=\"+ data.name} passHref>\r\n                                        <a className=\"card\">\r\n                                            <img className=\"border-bottom p-2\" src={data.image} />\r\n                                            <span className={textcard}>{data.name}</span>\r\n                                            <span className={textcard}>{data.type}</span>\r\n                                        </a>\r\n                                    </Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</InfiniteScroll>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default PokemonListPage"]},"metadata":{},"sourceType":"module"}